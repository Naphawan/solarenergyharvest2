
<script type="text/javascript" src="http://iop.io/js/vendor/d3.v3.min.js"></script>
<script type="text/javascript" src="http://iop.io/js/vendor/polymer/PointerEvents/pointerevents.js"></script>
<script type="text/javascript" src="http://iop.io/js/vendor/polymer/PointerGestures/pointergestures.js"></script>
<script type="text/javascript" src="http://iop.io/js/iopctrl.js"></script>
<script type="text/javascript" src="http://bernii.github.io/gauge.js/dist/gauge.min.js"></script>

<div class="row">
  <div class="col col-12">
    <%= image_tag  "sun.png", height: '45', width: '45' %>
    <div class="daytime">
      <span id="date"></span>
      <span id="timenav"></span>
    </div>
  </div>
</div>

<div class="container-fluid">
  <div class="row">
    <div class="col">
      <div class="center"> 
        <h4>Voltage</h4>      
         <canvas id="voltage" height="200"></canvas>
         <div class="col">
            <p class="alignleft">0 V</p>
            <p class="alignright">7 V</p>
          </div>
          <p class="value"><% for app in @value%><%= app.Voltage %> Volt<%end%></p>
      </div>
    </div>
    <div class="col">
      <div class="center"> 
        <h4>Current</h4>        
          <div>
            <canvas id="current" height="200"></canvas>
             <div class="col">
              <p class="alignleft">0 mA</p>
              <p class="alignright">4 mA</p>
             </div>
            <p class="value"><% for app in @value%><%= app.Current %> mA<%end%></>
          </div>
      </div>
    </div>
    <div class="col">
      <div class="center"> 
        <h4>Battery</h4>        
          <div>
            <svg id="fillgauge1" width="100%" height="190"></svg>
          </div>
      </div>
    </div>
  </div>
</div>
</br>

<div class="row">
  <div class="col">
    <canvas id="mycanvas"  width="150px" height="60px"></canvas>
  </div>
  <div class="col">
    <canvas id="mycanvas2"  width="150px" height="60px"></canvas>
  </div>
</div>

<!--<h3 id="date"></h3>-->

<!--Graph-->
<script> 
  var T = [<% for app in @apps%>"<%= app.created_at.strftime("%I:%M %p") %>",<%end%>];
  // [
  //         <% for app in @apps%>
          
  //           "<%= app.created_at.strftime("%I:%M%p") %>"
  //           ,
  //         <%end%>
  //         ];
  var config = {
    type: 'bar',
    data: {
      labels: T,
      datasets: [{
        label: 'Voltage',
        backgroundColor: "#11a",
        borderColor: "#11a",
        data: [
          <% for app in @apps%>
            <%= app.Voltage %>
            ,
          <%end%>
        ],
        fill: false,
      }]
    },
    options: {
      responsive: true,
      title: {
        display: false,
        text: 'Voltage'
      },
      tooltips: {
        mode: 'index',
        intersect: false,
      },
      hover: {
        mode: 'nearest',
        intersect: true
      },
      scales: {
        xAxes: [{
          display: true,
          scaleLabel: {
            display: true,
            labelString: 'Time'
          }
        }],
        yAxes: [{
          display: true,
          scaleLabel: {
            display: true,
            labelString: 'Voltage(v)'
          }
        }]
      }
    }
  };
  var config2 = {
    type: 'bar',
    data: {
      labels: T,
      datasets: [{
        label: 'Current',
        backgroundColor: "#a11",
        borderColor: "#a11",
        data: [
          <% for app in @apps%>
            <%= app.Current %>
            ,
          <%end%>
        ],
        fill: false,
      }]
    },
    options: {
      responsive: true,
      title: {
        display: false,
        text: 'Current'
      },
      tooltips: {
        mode: 'index',
        intersect: false,
      },
      hover: {
        mode: 'nearest',
        intersect: true
      },
      scales: {
        xAxes: [{
          display: true,
          scaleLabel: {
            display: true,
            labelString: 'Time'
          }
        }],
        yAxes: [{
          display: true,
          scaleLabel: {
            display: true,
            labelString: 'Current(mA)'
          }
        }]
      }
    }
  };

  var ctx = document.getElementById('mycanvas').getContext('2d');
  window.myLine = new Chart(ctx, config);
  var ctx2 = document.getElementById('mycanvas2').getContext('2d');
  window.myLine = new Chart(ctx2, config2);
</script>  

<!--Gauge Voltage-->
<script>
    var voltagevalue = {  angle: 0.18, // The span of the gauge arc
                          lineWidth: 0.1, // The line thickness
                          radiusScale: 1, // Relative radius
                          pointer: {
                          length: 0.6, // // Relative to gauge radius
                            strokeWidth: 0.1, // The thickness
                            color: '#000000' // Fill color
                          },
                          limitMax: false,     // If false, max value increases automatically if value > maxValue
                          limitMin: false,     // If true, the min value of the gauge will be fixed
                          colorStart: '#232528',   // Colors
                          colorStop: '#232528',    // just experiment with them
                          strokeColor: '#EEEEEE',  // to see which ones work best for you
                          generateGradient: true,
                          highDpiSupport: true,     // High resolution support
                        };
    var target = document.getElementById('voltage'); // your canvas element
    var gauge = new Donut(target).setOptions(voltagevalue); // create sexy gauge!
    gauge.maxValue = 7; // set max gauge value
    gauge.setMinValue(0);  // Prefer setter over gauge.minValue = 0
    gauge.animationSpeed = 36; // set animation speed (32 is default value)
    gauge.set(<% for app in @apps%><%= app.Voltage %>,<%end%>); // set actual value
</script>

<!--Gauge Current-->
<script>
    var currentvalue = {  angle: 0.18, // The span of the gauge arc
                          lineWidth: 0.1, // The line thickness
                          radiusScale: 1, // Relative radius
                          pointer: {
                          length: 0.6, // // Relative to gauge radius
                            strokeWidth: 0.1, // The thickness
                            color: '#000000' // Fill color
                          },
                          limitMax: false,     // If false, max value increases automatically if value > maxValue
                          limitMin: false,     // If true, the min value of the gauge will be fixed
                          colorStart: '#232528',   // Colors
                          colorStop: '#232528',    // just experiment with them
                          strokeColor: '#EEEEEE',  // to see which ones work best for you
                          generateGradient: true,
                          highDpiSupport: true,     // High resolution support
                        };
    var target1 = document.getElementById('current'); // your canvas element
    var gauge1 = new Donut(target1).setOptions(currentvalue); // create sexy gauge!
    gauge1.maxValue = 4; // set max gauge value
    gauge1.setMinValue(0);  // Prefer setter over gauge.minValue = 0
    gauge1.animationSpeed = 36; // set animation speed (32 is default value)
    gauge1.set(<% for app in @apps%><%= app.Current %>,<%end%>); // set actual value
</script>


<!--Gauge Battery-->
<script language="JavaScript">
    var config1 = liquidFillGaugeDefaultSettings();
    config1.circleColor = "#232528";
    config1.textColor = "#232528";
    config1.waveTextColor = "#232528";
    config1.waveColor = "#CCCCCC";
    config1.circleThickness = 0.1;
    config1.textVertPosition = 0.5;
    config1.waveAnimateTime = 1000;
    var gauge1 = loadLiquidFillGauge("fillgauge1", <%= app.Voltage %>*(100/7),config1);
</script>


